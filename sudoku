#include <iostream>

#include<fstream>
#include<cstdlib>
using namespace std;

int s[10][9][9];int q=0;

//9¹¬¸ñ²¿·Ö 
//ÅÐ¶ÏÔÚÐÐºÍÁÐÉÏÓÐÃ»ÓÐÖØ¸´Êý×Ö£¨²»ÖØ¸´true,ÖØ¸´false£©
bool isRowAndColRepeat9(int array[9][9],int row,int col,int num)
{
    int i; //¼ÆÊý
    //ÅÐ¶ÏÐÐÉÏÓÐÃ»ÓÐÖØ¸´µÄÊý×Ö 
    for(i=0; i<9; i++)
        if(array[row][i]==num)
            return false;
    //ÅÐ¶ÏÁÐÉÏÓÐÃ»ÓÐÖØ¸´µÄÊý×Ö
    for(i=0; i<9; i++)
        if(array[i][col]==num)
            return false;
    return true;
}
//ÅÐ¶Ï ÅÐ¶ÏÎ»ÖÃ ÊôÓÚÄÄ¸ö3x3¾Å¹¬¸ñ 
int getRowOrCol9(int num)
{
    if(num<3)
        return 0;
    else if(num<6)
        return 3;
    else
        return 6;
}
//ÅÐ¶Ï3x3¾Å¹¬¸ñ£¨¼´Í¬É«¾Å¹¬¸ñ£©ÄÚÊÇ·ñÓÐÖØ¸´µÄÊý×Ö£¨²»ÖØ¸´true,ÖØ¸´false£© 
bool isBlockRepeat9(int array[9][9],int row,int col,int num)
{
    int getRowOrCol(int num); //µÃµ½3x3¾Å¹¬¸ñÆðÊ¼Î»ÖÃµÄº¯ÊýÔ­ÐÍÉùÃ÷ 
    int rowStart, //ÐÐºÅ
    	colStart, //ÁÐºÅ
    	i,j; //¼ÆÊý
    rowStart=getRowOrCol9(row);
    colStart=getRowOrCol9(col); 
    for(i=rowStart; i<rowStart+3; i++)
        for(j=colStart; j<colStart+3; j++)
            if(array[i][j]==num)
                return false;
    return true;
}
//¶ÔÊý¶À¾Å¹¬¸ñ½øÐÐÉî¶ÈÓÅÏÈ¼ìË÷
void dfs9(int array[9][9],int row,int col)
{
    int i,j; //¼ÆÊý //µÝ¹é£¬ÉèÖÃ³ö¿Ú£ºÈç¹ûÐÐºÅrow³¬³öÊý×éÐÐÏÂ±ê£¬ÔòÍË³öµÝ¹é¼´Êä³ö´ð°¸
    if(row>8)
    {
        for(i=0; i<9; i++)
        {
            for(j=0; j<9; j++)
            
                s[q][i][j]=array[i][j];
        }
        q++;
        return;
    }
    //Èç¹ûarray[row][col] == 0¼´¸ÃÎ»ÖÃµÄÊýÎ´È·¶¨£¨²»ÊÇÌâÄ¿ÖÐ¸øºÃµÄÊý£¬¿ÉÒÔ¸ü¸Ä£©
    if(array[row][col]==0)
    {
        for(i=1; i<10; i++)
        	//´Ó1~9¿ªÊ¼ÊÔÊý for(i = 1;i < 10;i++) //Èç¹û1~9ÖÐÓÐºÏÊÊµÄÊý£¬Ôò¸ÃÎ»ÖÃµÄÊýÎª¸ÃÊý£¬²¢¿ªÊ¼±éÀúÏÂÒ»¸öÎ»ÖÃ
            if(isRowAndColRepeat9(array,row,col,i) && isBlockRepeat9(array,row,col,i))
            {
                array[row][col]=i;
                dfs9(array,row + (col+1)/9,(col+1)%9); //µ±Ã¿Ò»ÐÐµÄµ¥Ôª¸ñ¶¼±éÀú¹ý£¬ÔÙ½øÈëÏÂÒ»ÐÐ 
            }
        array[row][col] = 0; //Èç¹ûÃ»ÓÐ(²»ÊÇ)ºÏÊÊµÄÊý£¬ÔòÖØÖÃÎª0
    }
    else
    { // Èç¹û¸ÃÎ»ÖÃµÄÊýÒÑÈ·¶¨ÔòÌø¹ý¸ÃÎ»ÖÃ£¬±éÀúÏÂÒ»¸öÎ»ÖÃ
        dfs9(array,row+(col+1)/9,(col+1)%9); //µ±Ã¿Ò»ÐÐµÄµ¥Ôª¸ñ¶¼±éÀú¹ý£¬ÔÙ½øÈëÏÂÒ»ÐÐ
    }
}
int main(int argc,char *argv[])
{   
	int m=atoi(argv[2]);
	int n=atoi(argv[4]);
int i,j;
int sudoku[9][9];
	char* in=argv[6];
	char *out=argv[8];
	FILE* fp1,*fp2;
	fp2=fopen(out,"w");
	if(fp2==NULL)
	return -1;
		fclose(fp2);
	fp1=fopen(in,"r");
	if(fp1==NULL)
	return -1;
	for(int k=0;k<n;k++)
	{
	
	for( i=0;i<m;i++)
	for(j=0;j<m;j++)
	fscanf(fp1,"%d",&sudoku[i][j]);
	
	dfs9(sudoku,0,0);
}
	fp2=fopen(out,"a");
	if(fp2==NULL)
	return -1;
	for(int a=0;a!=q;a++){
	
		for( i=0;i<m;i++)
	{
            for (j = 0; j < m; j++)
            {
                fprintf(fp2, "%d", s[a][i][j]);//½«µÚÒ»¸öÅÌÃæµÄ´ð°¸´æÈëÊä³öÎÄ¼þ
                if (j != m-1)
                    fprintf(fp2, "%c", ' ');
        }
            if(i!=m-1)
                fprintf(fp2, "\n");
        }
        
        
            fprintf(fp2, "\n\n");
           
}
	
	
	fclose(fp1);
	fclose(fp2);
	return 0;
 } 
